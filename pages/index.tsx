import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { FieldInstance } from "@privy-io/privy-browser";
import { useSession, SignOutLink } from "../components/session";

function HomePage() {
  const session = useSession();
  const [inbox, setInbox] = useState<FieldInstance | null>(null);
  const [inboxUrl, setInboxUrl] = useState<string | null>(null);

  useEffect(() => {
    async function fetchInboxFromPrivy() {
      try {
        const inbox = await session.privy.getFile(session.address, "inbox");
        setInbox(inbox);
      } catch (error) {
        console.log(error);
      }
    }
    fetchInboxFromPrivy();
  }, [session]);

  // Construct the avatar url when the avatar value changes
  useEffect(() => {
    if (!inbox) {
      return;
    }

    const src = URL.createObjectURL(inbox.blob());
    setInboxUrl(src);

    // Cleanup url after use
    return () => URL.revokeObjectURL(src);
  }, [inbox]);

  async function onUpload(destinationAddress: string, file: File) {
    try {
      const inbox = await session.privy.putFile(
        destinationAddress,
        "inbox",
        file
      );
      console.log("Successfully uploaded file");
    } catch (e) {
      console.log(e);
    }
  }

  return (
    <div>
      <UploadShow address={session.address} onUpload={onUpload} />
      <InboxShow inbox={inbox} inboxUrl={inboxUrl} />
    </div>
  );
}

function InboxShow(props: {
  inbox: FieldInstance | null;
  inboxUrl: string | null;
}) {
  if (props.inboxUrl) {
    return (
      <div>
        <a href={props.inboxUrl!}> Download </a>
      </div>
    );
  }
  return null;
}

function UploadShow(props: {
  address: string;
  onUpload: (destination: string, file: File) => void;
}) {
  const [destination, setDestination] = useState<string | null>(null);

  const onChange = async (e: React.ChangeEvent<HTMLInputElement>) => {
    const fileList = e.target.files || new FileList();
    const file = fileList[0] || null;
    if (destination) {
      await props.onUpload(destination, file);
      if (destination === props.address) {
        // TODO(dave): Update inbox.
        // setInbox(file);
      }
    } else {
      console.error("No destination address provided");
    }
  };

  return (
    <div>
      <Head>
        <title> PrivyFlush </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <header>
          <h1> PrivyFlush - Inbox for {props.address}</h1>
        </header>
        <div>
          <input
            id="destination"
            type="text"
            placeholder="destination address"
            onChange={(e) => setDestination(e.target.value)}
          ></input>
        </div>
        <div>
          <input type="file" onChange={onChange} />
        </div>
      </main>
    </div>
  );
}

export default HomePage;
